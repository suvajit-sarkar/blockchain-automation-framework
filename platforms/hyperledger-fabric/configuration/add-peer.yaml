# This playbook adds a new peer to an exisitng organization in an existing Fabric DLT network on existing Kubernetes clusters
# The Kubernetes clusters should already be created and the infomation to connect to the
#  clusters be updated in the network.yaml file that is used as an input to this playbook
###########################################################################################
# To Run this playbook from this directory, use the following command (network.yaml also in this directory)
#  ansible-playbook add-peer.yaml -e "@./network.yaml" -e "add_new_org='false'" -e "add_peer='true'"
############################################################################################
# Please ensure that the ../../shared/configuration playbooks have been run and a DLT network exists.
# Please ensure the orderer certificates are placed on the paths mentioned in orderer.certificate in network.yaml
---
  # This will apply to ansible_provisioners. /etc/ansible/hosts should be configured with this group
- hosts: ansible_provisioners
  gather_facts: no
  tasks:

    # delete build directory
    - name: Remove build directory
      file:
        path: "./build"
        state: absent

    # Create generate_crypto script for new organization
    - include_role:
        name: "create/add_new_peer/crypto_script"
      vars:
        component_type: "{{ item.type | lower}}"
        orderers: "{{ item.services.orderers }}"
      loop: "{{ network['organizations'] }}"
      when: item.org_status == 'new'

    # Create Organization crypto materials for new organization
    - include_role:
        name: "create/crypto/peer"
      vars:
        component_name: "{{ item.name | lower}}-net"
        component_type: "{{ item.type | lower}}"
        org_name: "{{ item.name }}"
        services: "{{ item.services }}"
        subject: "{{ item.subject }}"
        cert_subject: "{{ item.subject | regex_replace('/', ';') | regex_replace(',', '/') | regex_replace(';', ',') }}" # replace , to / and / to , for certpath
        kubernetes: "{{ item.k8s }}"
        vault: "{{ item.vault }}"
      loop: "{{ network['organizations'] }}"
      when: item.type == 'peer' and item.org_status == 'new'
    
    # This role creates the value file for peers of organisations and write couch db credentials
    # to the vault.
    - include_role:
        name: "create/peers"
      vars:
        build_path: "./build"
        namespace: "{{ item.name | lower}}-net"
        component_type: "{{ item.type | lower}}"
        component_services: "{{ item.services }}"
        vault: "{{ item.vault }}"
        git_url: "{{ item.gitops.git_url }}"
        git_branch: "{{ item.gitops.branch }}"
        docker_url: "{{ network.docker.url }}"
        charts_dir: "{{ item.gitops.chart_source }}"
        values_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/{{ item.name | lower }}"
      loop: "{{ network['organizations'] }}"
      when: item.type == 'peer'

    # This role fetches block 0 and joins peers of new organizaion to the channel
    - include_role:
        name: "create/channels_join"
      vars:
        build_path: "./build"
        participants: "{{ item.participants }}"
        docker_url: "{{ network.docker.url }}"
      loop: "{{ network['channels'] }}"

  vars: #These variables can be overriden from the command line
    privilege_escalate: false           #Default to NOT escalate to root privledges
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir:  "~/bin"            #Default to /bin install directory for binaries
